<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>SCDM如何移动实体并保证对齐</title>
    <url>/2020/04/29/SCDM%E5%A6%82%E4%BD%95%E7%A7%BB%E5%8A%A8%E5%AE%9E%E4%BD%93%E5%B9%B6%E4%BF%9D%E8%AF%81%E5%AF%B9%E9%BD%90/</url>
    <content><![CDATA[<p>依据坐标系进行移动：将需要移动的实体的特征点设定为需要移动的坐标中心，选择需要移动到的终点特征点，确认即可。最后选择两个实体，合并。即得到一个新的对齐的实体。</p>
<p><img src="https://i.loli.net/2020/04/29/FRwtDmjsJ19aCZY.png" alt="image.png"></p>
]]></content>
      <tags>
        <tag>仿真模拟 SCDM ANSYS</tag>
      </tags>
  </entry>
  <entry>
    <title>小米感恩节活动，明信片爬虫</title>
    <url>/2020/03/04/%E5%B0%8F%E7%B1%B3%E6%84%9F%E6%81%A9%E8%8A%82%E6%B4%BB%E5%8A%A8%EF%BC%8C%E6%98%8E%E4%BF%A1%E7%89%87%E7%88%AC%E8%99%AB/</url>
    <content><![CDATA[<p>2019年11月28日，用了几个月的小米9SE，推送了一条消息“小爱 『同学们』的感恩信”，感恩信，第一篇就是唱跳RAP的雷军。</p>
<p>最近正好在学习爬虫的知识，闲来无事，决定将所有的感恩信下载下来，留存备份。项目代号就是“爱了爱了”。</p>
<h1 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">获取小米感恩节中小爱同学的所有祝福卡片</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> grab <span class="keyword">import</span> Grab</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSources</span><span class="params">(i=None)</span>:</span></span><br><span class="line">    level = driver.find_element_by_class_name(<span class="string">'index_title__2AG9z'</span>).get_attribute(<span class="string">'textContent'</span>)</span><br><span class="line">    <span class="comment"># print(level)</span></span><br><span class="line">    pic_url = driver.find_element_by_class_name(<span class="string">'index_letterImg__3DlbL'</span>).get_attribute(<span class="string">'src'</span>)</span><br><span class="line">    <span class="comment"># print(pic_url)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取图片</span></span><br><span class="line">    img = requests.get(pic_url)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存图片到指定文件夹下</span></span><br><span class="line">    path = <span class="string">'D:\Sources\XiaoMiThanksgivingDay\pic'</span></span><br><span class="line">    <span class="comment"># 如果没有对应文件夹，自动创建文件夹</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(path):</span><br><span class="line">        os.mkdir(path)</span><br><span class="line">    paths = path + <span class="string">'\\'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 按照level和读取顺序保存图片</span></span><br><span class="line">    file = open(paths + level + str(i) + <span class="string">'.jpg'</span>, <span class="string">'ab'</span>)</span><br><span class="line">    file.write(img.content)</span><br><span class="line">    print(level + str(i), <span class="string">'文件保存成功！'</span>)</span><br><span class="line">    file.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pic_url</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    driver = webdriver.Chrome()</span><br><span class="line">    driver.get(<span class="string">'https://i.ai.mi.com/h5/ai-thanksgiving-letter-fe/#/letter'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">300</span>):</span><br><span class="line">        old_url=getSources(i)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 点击进入下一张图片</span></span><br><span class="line">        driver.find_element_by_class_name(<span class="string">'index_nextButton__2CRzD'</span>).click()</span><br><span class="line">        time.sleep(<span class="number">5</span>)</span><br></pre></td></tr></table></figure>

<p>以上源代码在集成开发环境Pycharm进行开发，代码并不长，开发能力有限，没有涉及到多线程处理等骚操作。</p>
<p>明信片的浏览并不是顺序排列的，而是随机展示，导致下载的图片存在一些重复；也是因为没有开启多线程，下载速率较慢。最后因电脑性能和个人时间限制，只下载了299张。实际应该有608人。这608人应该是都是小爱团队的人员。</p>
<p><strong>小爱团队的架构应该是：雷布斯、产品经理、工程师、设计师等。</strong></p>
<h1 id="爬图成果"><a href="#爬图成果" class="headerlink" title="爬图成果"></a>爬图成果</h1><p>话不多说，看结果：</p>
<h2 id="设计师篇"><a href="#设计师篇" class="headerlink" title="设计师篇"></a>设计师篇</h2><p><img src="https://i.loli.net/2020/03/04/ahNeFskqrYc91Zn.png" alt="image.png"><br>设计师就是涂涂画画，很有感觉，不乏调皮的。</p>
<h2 id="工程师篇"><a href="#工程师篇" class="headerlink" title="工程师篇"></a>工程师篇</h2><p><img src="https://i.loli.net/2020/03/04/APLuy98qn5aOC7K.png" alt="image.png"><br><img src="https://i.loli.net/2020/03/04/OTeSLdBP3QJazqk.png" alt="Image.png"><br><img src="https://i.loli.net/2020/03/04/N5uvdOQxwLgXtD9.png" alt="Image.png"><br><img src="https://i.loli.net/2020/03/04/TsWAPeJlNpK6XRE.png" alt="Image.png"><br><img src="https://i.loli.net/2020/03/04/1QvlS7BpgoROAVh.png" alt="Image.png"><br>程序员嘛，人狠话不多，基本都是文字了…</p>
<h2 id="产品经理篇"><a href="#产品经理篇" class="headerlink" title="产品经理篇"></a>产品经理篇</h2><p><img src="https://i.loli.net/2020/03/04/RsHM9UzwBcFreKo.png" alt="Image.png"><br><img src="https://i.loli.net/2020/03/04/KsepIMqJ3UrPH4X.png" alt="Image.png"><br><img src="https://i.loli.net/2020/03/04/SqHhzuFTVc1rnmZ.png" alt="Image.png"></p>
<p>一直背锅的产品经理，明信片风格介于工程师与设计师之间，风格各异，个性。</p>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>产品经理89张，工程师179张，设计师37张。PM：RD：Designer=89:179:37≈3：6：1，从这个关系中可以看出小爱同学的整个项目中，开发工程师占据的大半，产品经理占据三成，设计师比例一成。</p>
]]></content>
  </entry>
  <entry>
    <title>UnblockNeteaseMusic使用细则</title>
    <url>/2020/02/19/UnblockNeteaseMusic%E4%BD%BF%E7%94%A8%E7%BB%86%E5%88%99/</url>
    <content><![CDATA[<p><img src="https://i.loli.net/2020/02/19/PWX6OBm7bRucN4w.png" alt="image.png"></p>
<p>UnblockNeteaseMusic是nondanee在GitHub上发布的一个项目，用于网易云音乐代理。</p>
<p>😅我也是小白，但是在使用过程中，掌握了代理的一些内容，不是十分准确，但是简明扼要，大神轻喷。</p>
<p>😀<a href="https://github.com/nondanee/UnblockNeteaseMusic" target="_blank" rel="noopener">UnblockNeteaseMusic项目地址</a></p>
<h1 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h1><blockquote>
<p>Windows<br><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Download | Node.js</a><br>下载 .msi 安装包并安装</p>
<p>macOS<br><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Download | Node.js</a><br>下载 .pkg 安装包并安装</p>
<p>inux<br><a href="https://nodejs.org/en/download/package-manager/" target="_blank" rel="noopener">Installing Node.js via package manager | Node.js</a><br>参照教程安装 nodejs</p>
</blockquote>
<p>从官方教程里学到，Windows可以使用<a href="https://zhuanlan.zhihu.com/p/55134054" target="_blank" rel="noopener">Scoop包管理器</a>。</p>
<h1 id="下载项目"><a href="#下载项目" class="headerlink" title="下载项目"></a>下载项目</h1><p>方法❶使用Git克隆（此方法用于服务器端部署，方便快捷）</p>
<blockquote>
<p>git clone <a href="https://github.com/nondanee/UnblockNeteaseMusic.git" target="_blank" rel="noopener">https://github.com/nondanee/UnblockNeteaseMusic.git</a> #克隆项目仓库<br>cd UnblockNeteaseMusic #进入项目根目录</p>
</blockquote>
<p>方法❷ 下载源码压缩包（本地PC下载部署）</p>
<h1 id="使用方法（host模式）"><a href="#使用方法（host模式）" class="headerlink" title="使用方法（host模式）"></a>使用方法（host模式）</h1><h2 id="1-寻找网易云服务器的IP"><a href="#1-寻找网易云服务器的IP" class="headerlink" title="1. 寻找网易云服务器的IP"></a>1. 寻找网易云服务器的IP</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping music.163.com</span><br></pre></td></tr></table></figure>
<p>得到类似 223.252.199.66 的IP</p>
<h2 id="2-向hosts文件添加记录"><a href="#2-向hosts文件添加记录" class="headerlink" title="2. 向hosts文件添加记录"></a>2. 向hosts文件添加记录</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1 music.163.com</span><br><span class="line">127.0.0.1 interface.music.163.com</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Windows hosts C:\Windows\System32\drivers\etc\hosts</p>
<p>Linux/macOS hosts /etc/hosts</p>
</blockquote>
<h2 id="3-设置参数启动"><a href="#3-设置参数启动" class="headerlink" title="3. 设置参数启动"></a>3. 设置参数启动</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node app.js -p 80 -f 223.252.199.66</span><br></pre></td></tr></table></figure>

<blockquote>
<p>若在 linux/macOS下报错 Error: listen EACCES 0.0.0.0:80 请加 sudo</p>
</blockquote>
<h1 id="其它配置"><a href="#其它配置" class="headerlink" title="其它配置"></a>其它配置</h1><p>参数可叠加</p>
<h2 id="开启严格模式"><a href="#开启严格模式" class="headerlink" title="开启严格模式"></a>开启严格模式</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node app.js -s ...</span><br></pre></td></tr></table></figure>

<h2 id="设置搜索的音源-有序"><a href="#设置搜索的音源-有序" class="headerlink" title="设置搜索的音源 (有序)"></a>设置搜索的音源 (有序)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">默认为 qq kuwo migu，排在越前优先级越高，启用越多网络开销越大</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node app.js -o joox qq ...</span><br></pre></td></tr></table></figure>

<h2 id="使用自定义端口"><a href="#使用自定义端口" class="headerlink" title="使用自定义端口"></a>使用自定义端口</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node app.js -p 5000 ...</span><br></pre></td></tr></table></figure>

<h2 id="使用-jixun-的反代服务器"><a href="#使用-jixun-的反代服务器" class="headerlink" title="使用 jixun 的反代服务器"></a>使用 jixun 的反代服务器</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node app.js -f 79.137.38.20 ...</span><br></pre></td></tr></table></figure>

<h2 id="使用上游-http-https-代理"><a href="#使用上游-http-https-代理" class="headerlink" title="使用上游 http / https 代理"></a>使用上游 http / https 代理</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node app.js -u http:&#x2F;&#x2F;127.0.0.1:1080 ...</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Node-Red</title>
    <url>/2020/02/15/Node-RED/</url>
    <content><![CDATA[<h1 id="Node-Red-开坑"><a href="#Node-Red-开坑" class="headerlink" title="Node-Red 开坑"></a>Node-Red 开坑</h1><h2 id="什么是Node-Red"><a href="#什么是Node-Red" class="headerlink" title="什么是Node-Red"></a>什么是Node-Red</h2><p>第一次接触Node-Red的时候，并不知道什么是Node-Red。</p>
<p>当时看到的只是这个项目的标志，长这个样子:</p>
<p><img src="https://i.loli.net/2020/02/15/3Dz7yZCHIvhjA52.png" alt="image.png"></p>
<p>第一眼，感觉是个类似于思维导图的一个东西，并不知道是IOT开发中的一个工具。</p>
<p>昨天翻看GitHub时，恰好翻到了这个项目的介绍，同时自己也看了B站开发板Up主『稚晖君』的视频。</p>
<p>说了这些前世今生，引用<a href="https://nodered.org/" target="_blank" rel="noopener">Node-Red官网</a>的介绍：</p>
<blockquote>
<p>Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.<br>It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click.</p>
</blockquote>
<p>恰好自己手上有两块板子，一块是树莓派3代B型E14 另外一块是阿里的AliOS Things IOT开发者版。感觉是一个难得的机会，就花了两个小时在本地电脑上部署Node-Red项目。</p>
<h2 id="部署过程"><a href="#部署过程" class="headerlink" title="部署过程"></a>部署过程</h2><p>使用Powershell或者VSCode编辑器进行部署</p>
<p>这里我是使用了VSCode，界面美观，方便操作。</p>
<p>在VSCode中使用 </p>
<blockquote>
<p>Ctrl+Shift+`</p>
</blockquote>
<p>调用终端服务。</p>
<p>部署Node-Red之前提前安装node和npm。</p>
<blockquote>
<p>npm install node-red</p>
</blockquote>
<p>当安装完成之后（安装过程中可能会遇到requests不再支持服务的情况，百度去解决一下，或者之后开坑解释一下解决过程）。</p>
<blockquote>
<p>node-red</p>
</blockquote>
<p>Node-Red服务将开始运行。</p>
<p><img src="https://i.loli.net/2020/02/15/COQPUAwDl287Mj4.png" alt="image.png"></p>
<p>这个时候，在浏览器中访问Node-Red提供的地址，就能访问Node-Red本地项目了。</p>
<p><img src="https://i.loli.net/2020/02/15/dkKJBQZD8Uz3cPs.png" alt="image.png"></p>
]]></content>
  </entry>
  <entry>
    <title>Ali的2019年人生经验读书笔记</title>
    <url>/2020/02/10/Ali%E7%9A%842019%E5%B9%B4%E4%BA%BA%E7%94%9F%E7%BB%8F%E9%AA%8C%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p><img src="https://i.loli.net/2020/02/10/IOAlQ4dYBSL3Dq9.png" alt="image.png"></p>
]]></content>
  </entry>
  <entry>
    <title>JavaFX小白初期使用采坑合集2</title>
    <url>/2020/01/15/JavaFX%E5%B0%8F%E7%99%BD%E5%88%9D%E6%9C%9F%E4%BD%BF%E7%94%A8%E9%87%87%E5%9D%91%E5%90%88%E9%9B%862/</url>
    <content><![CDATA[<h1 id="1-提示缺少VM或者其他lib"><a href="#1-提示缺少VM或者其他lib" class="headerlink" title="1. 提示缺少VM或者其他lib"></a>1. 提示缺少VM或者其他lib</h1><p><a href="https://openjfx.io/" target="_blank" rel="noopener">JavaFX官网下载对应文件</a></p>
<pre><code>原则：提示缺少什么就去搜索相关jar包，并添加到lib库中，重新进行编译。</code></pre><p><img src="https://i.loli.net/2020/01/15/rbmZGXgjOAtu3Uc.png" alt="image.png"></p>
<h2 id="1-1-Error-缺少VM-options"><a href="#1-1-Error-缺少VM-options" class="headerlink" title="1.1 Error :缺少VM options"></a>1.1 Error :缺少VM options</h2><ul>
<li><p>开发环境： IDEA</p>
</li>
<li><p>运行环境： Windows</p>
<p>  <strong>操作方法：</strong></p>
</li>
</ul>
<ol>
<li><p>Run-&gt;Edit Configurations 打开Debug Configurations,并找到VM options；</p>
<p> <img src="https://i.loli.net/2020/01/15/iF5gXkPrCySBuRG.png" alt="image.png"></p>
</li>
<li><p>添加一下内容到VM options，同时更改其中的path路径为自己javaFX的lib路径；</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--module-path &quot;D:\Develop\JavaFX\lib&quot; --add-modules javafx.controls,javafx.fxml</span><br></pre></td></tr></table></figure>
</li>
<li><p>Apply确认运行；</p>
</li>
</ol>
<h2 id="1-2-Error-缺少jar包"><a href="#1-2-Error-缺少jar包" class="headerlink" title="1.2 Error :缺少jar包"></a>1.2 Error :缺少jar包</h2><ul>
<li>开发环境： IDEA</li>
<li>运行环境： Windows</li>
</ul>
<ol>
<li><p>在IDEA中使用 Ctrl+Alt+Shift+S 打开Project Structure；</p>
<p> <img src="https://i.loli.net/2020/01/15/mLAoZ1TFkUVuzYw.png" alt="image.png"></p>
</li>
<li><p>添加jar包到Libraries；</p>
</li>
</ol>
<hr>
<h1 id="2-报错NullPoint"><a href="#2-报错NullPoint" class="headerlink" title="2. 报错NullPoint"></a>2. 报错NullPoint</h1><pre><code>原则1 ： 检查fxml文件中的控件是否和controller中的对象一一对应；</code></pre><hr>
<h1 id="3-Dialog无法使用"><a href="#3-Dialog无法使用" class="headerlink" title="3. Dialog无法使用"></a>3. Dialog无法使用</h1><p>替代方案使用Alert;(Alert extends Dialog )</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Alert alert = <span class="keyword">new</span> Alert(Alert.AlertType.ERROR);</span><br><span class="line">alert.setTitle(<span class="string">"Error"</span>);</span><br><span class="line">alert.setHeaderText(<span class="string">"请选择需要删除的Item"</span>);</span><br><span class="line">alert.setContentText(<span class="keyword">null</span>);</span><br><span class="line">alert.showAndWait();</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/u013760453/article/details/78980637" target="_blank" rel="noopener">JavaFX Dialog相关文档</a></p>
]]></content>
      <tags>
        <tag>JavaFX,Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo搭建网站过程中:命令行+Git+Markdown操作指南</title>
    <url>/2020/01/14/Hexo%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99%E8%BF%87%E7%A8%8B%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%92%8CGit%E5%B7%A5%E5%85%B7%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h1 id="1-CMD-Windows命令行（黑窗口）的使用"><a href="#1-CMD-Windows命令行（黑窗口）的使用" class="headerlink" title="1. CMD Windows命令行（黑窗口）的使用"></a>1. CMD Windows命令行（黑窗口）的使用</h1><p>黑窗口的作用，用于安装Hexo框架。（Hexo安装没有可视化界面，依靠命令行执行。）</p>
<p>Win+R 调出“运行”：</p>
<p><img src="https://i.loli.net/2020/01/14/paGyrl3wbiFYuJc.png" alt="image.png"></p>
<p>输入cmd，运行黑窗口：</p>
<p><img src="https://i.loli.net/2020/01/14/Jwp9rUEMlHqFI81.png" alt="image.png"></p>
<h2 id="1-1-常用黑窗口命令"><a href="#1-1-常用黑窗口命令" class="headerlink" title="1.1 常用黑窗口命令"></a>1.1 常用黑窗口命令</h2><p>dir = directorys 列出当前文件夹下所有的文件</p>
<p>cd = change directory 切换文件夹</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd. 当前文件</span><br><span class="line">cd.. 进入上一级文件夹</span><br><span class="line">cd..&#x2F;.. 进入上一级的上一级的文件夹</span><br></pre></td></tr></table></figure>

<p>cls = clean screen 清空黑窗口</p>
<p>直接输入盘符，切换到对应盘符</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d:   切换到D盘</span><br></pre></td></tr></table></figure>


<p><strong>同源话题</strong></p>
<ul>
<li><a href="https://www.zhihu.com/topic/19703816/hot" target="_blank" rel="noopener">GUI</a></li>
<li><a href="https://www.zhihu.com/topic/20755783/hot" target="_blank" rel="noopener">Windows Terminal</a></li>
<li><a href="https://www.zhihu.com/search?type=content&q=linux%20%E7%BB%88%E7%AB%AF" target="_blank" rel="noopener">Linux Treminal</a>和Windows Terminal有共同之处，但是区别很大。</li>
</ul>
<p><strong>父话题</strong></p>
<ul>
<li><a href="https://www.zhihu.com/topic/19562736/hot" target="_blank" rel="noopener">UNIX</a>在←面前，其他都是孙子</li>
</ul>
<hr>
<h1 id="2-Git和GitHubDesktop的使用"><a href="#2-Git和GitHubDesktop的使用" class="headerlink" title="2. Git和GitHubDesktop的使用"></a>2. Git和GitHubDesktop的使用</h1><h2 id="2-1-Git的使用"><a href="#2-1-Git的使用" class="headerlink" title="2.1 Git的使用"></a>2.1 Git的使用</h2><p>Git 是版本控制工具（Version Control），解决版本管理混乱的问题。</p>
<p>推荐<a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener"><strong>廖雪峰-史上最浅显易懂的Git教程</strong></a></p>
<p><strong>同源话题</strong></p>
<ul>
<li><a href="https://www.zhihu.com/search?type=content&q=svn" target="_blank" rel="noopener">SVN的使用</a></li>
</ul>
<p><strong>父话题</strong></p>
<ul>
<li><a href="https://www.zhihu.com/topic/19552811/hot" target="_blank" rel="noopener">开源软件</a></li>
<li><a href="https://www.zhihu.com/topic/19551033/hot" target="_blank" rel="noopener">版本控制</a></li>
</ul>
<hr>
<h2 id="2-2-GitHubDesktop的使用"><a href="#2-2-GitHubDesktop的使用" class="headerlink" title="2.2 GitHubDesktop的使用"></a>2.2 GitHubDesktop的使用</h2><p>GitHubDesktop是Git的可视化界面，将输入命令行的方式转变为手动点击。</p>
<p>方便人们使用，减少git命令的记忆量。</p>
<p><img src="https://i.loli.net/2020/01/14/2TaysjHMtF6PDoS.png" alt="image.png"></p>
<p>推荐<a href="https://www.zhihu.com/question/278431031/answer/486857507" target="_blank" rel="noopener">Github desktop 如何使用？ - 周博言</a></p>
<hr>
<h1 id="3-Markdown的使用"><a href="#3-Markdown的使用" class="headerlink" title="3. Markdown的使用"></a>3. Markdown的使用</h1><p>Markdown是一种可以<strong>使用普通文本编辑器编写的标记语言</strong>，通过简单的标记语法，它可以使普通文本内容具有一定的格式。Markdown具有一系列衍生版本，用于扩展Markdown的功能（如表格、脚注、内嵌HTML等等），这些功能原初的Markdown尚不具备，它们能让Markdown转换成更多的格式，例如LaTeX，Docbook。Markdown增强版中比较有名的有Markdown Extra、MultiMarkdown、 Maruku等。这些衍生版本要么基于工具，如Pandoc；要么基于网站，如GitHub和Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。</p>
<p><em>我推荐使用<strong>VS Code</strong> 进行Markdown文档编辑</em></p>
<p>Hexo默认使用的是markdown。</p>
<h2 id="3-1-Markdown语法"><a href="#3-1-Markdown语法" class="headerlink" title="3.1 Markdown语法"></a>3.1 <strong>Markdown语法</strong></h2><p><a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">Markdown基本语法</a></p>
<p>当我忘记Markdown语法时，上面这个网站是我经常查询的。（记性不好）</p>
<p>常见的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line"></span><br><span class="line">- 列表</span><br><span class="line"></span><br><span class="line">Ctrl + B   加粗</span><br><span class="line">Ctrl + I   斜体</span><br><span class="line"></span><br><span class="line">![baidu.png](http:&#x2F;&#x2F;www.baidu.com&#x2F;home.png)      插入图片</span><br><span class="line">[baidu](http:&#x2F;&#x2F;www.baidu.com&#x2F;)     插入网址</span><br></pre></td></tr></table></figure>

<p><strong>同源话题</strong></p>
<ul>
<li><a href="https://www.zhihu.com/topic/19590742/hot" target="_blank" rel="noopener">Markdown</a></li>
<li><a href="https://www.zhihu.com/topic/19600593/hot" target="_blank" rel="noopener">图床</a>   我推荐使用<a href="http://www.sm.ms" target="_blank" rel="noopener">www.sm.ms</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo CMD Git GitDesktop</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaFX小白使用初期采坑合集</title>
    <url>/2020/01/13/JavaFX%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E5%88%9D%E6%9C%9F%E9%87%87%E5%9D%91%E5%90%88%E9%9B%86/</url>
    <content><![CDATA[<p>SceneBuilder创建的文件在IDEA中运行时提示Location is required<br>JavaFX的使用当使用SceneBuild进行UI界面搭建后，导入到IDEA中时，需要对fxml文件进行修改<br>按照项目文件层级，添加如下语句：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">fx:controller=<span class="string">"sample.Controller"</span></span><br></pre></td></tr></table></figure>

<p>类似下图：<br><img src="https://i.loli.net/2020/01/13/OkNeqwGYXIdHA5i.png" alt="fxml中fx:controller.png"></p>
<p>以此指代清楚fx.controller。</p>
]]></content>
      <tags>
        <tag>JavaFX,Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/01/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
